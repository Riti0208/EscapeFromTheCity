/****************************************************************************
* タイトル:  ライトの処理
* ファイル名:light.cpp
* 作成者：	 芳崎大地
* 作成日：   2015/10/20
*******************************************************************************/
/*******************************************************************************
* 更新履歴：
*
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include"light.h"
/*******************************************************************************
* マクロ定義
*******************************************************************************/
/*******************************************************************************
* 構造体の定義
*******************************************************************************/
/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/
/*******************************************************************************
* グローバル変数
*******************************************************************************/
D3DLIGHT9 CLight::aLight[3];
/*******************************************************************************
* 関数名:void InitLight()
*
* 引数:  なし
* 戻り値:なし
* 説明 ライトの初期化処理
*
*******************************************************************************/
HRESULT CLight::Init(){
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CRenderer::GetDevice();
	D3DXVECTOR3 vecDir;
	for (int nLightCnt = 0; nLightCnt < MAX_LIGHT; nLightCnt++){
		//全てを０で初期化
		ZeroMemory(&aLight[nLightCnt], sizeof(D3DLIGHT9));
	}
	//平行光源
	aLight[0].Type = D3DLIGHT_DIRECTIONAL;
	aLight[1].Type = D3DLIGHT_DIRECTIONAL;
	aLight[2].Type = D3DLIGHT_DIRECTIONAL;
	//光の色
	aLight[0].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	aLight[1].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	aLight[2].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	//光の方向
	vecDir = D3DXVECTOR3(0.0f, -1.0f, 0.0f);
	//正規化
	D3DXVec3Normalize((D3DXVECTOR3*)&aLight[0].Direction, &vecDir);
	//光の方向
	vecDir = D3DXVECTOR3(-0.5f, 0.5f, -0.5f);
	//正規化
	D3DXVec3Normalize((D3DXVECTOR3*)&aLight[1].Direction, &vecDir);
	//光の方向
	vecDir = D3DXVECTOR3(0.0f, 0.25f, 0.25f);
	//正規化
	D3DXVec3Normalize((D3DXVECTOR3*)&aLight[2].Direction, &vecDir);

	//ライトの設定
	pDevice->SetLight(0, &aLight[0]);
	//ライトの設定
	pDevice->SetLight(1, &aLight[1]);
	//ライトの設定
	pDevice->SetLight(2, &aLight[2]);

	//ライトのtrue/false
	pDevice->LightEnable(0, true);
	pDevice->LightEnable(1, true);
	pDevice->LightEnable(2, true);
	return S_OK;
}
